# API Configuration
API_KEY=tu_api_key_aqui
GENERIC_TIMEZONE=Europe/Madrid
PORT=8000

# OpenAI Configuration
OPENAI_API_KEY=tu_openai_api_key_aqui
OPENAI_TIMEOUT=30.0          # Timeout en segundos para llamadas a OpenAI
# OpenAI Retry Configuration
OPENAI_MAX_RETRIES=3         # Número máximo de reintentos
OPENAI_RETRY_DELAY_BASE=1.0  # Retraso base para backoff exponencial (segundos)
OPENAI_RETRY_DELAY_MAX=10.0  # Retraso máximo entre reintentos (segundos)
OPENAI_RETRY_JITTER=0.1      # Factor de jitter para evitar tormentas de reintentos

# Database Configuration
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=workflowdb
POSTGRES_USER=usuario
POSTGRES_PASSWORD=password_seguro
# Configuración del pool de conexiones PostgreSQL
POSTGRES_POOL_SIZE=20        # Número máximo de conexiones permanentes que mantiene el pool
POSTGRES_MAX_OVERFLOW=10     # Número de conexiones adicionales temporales permitidas cuando el pool está lleno
POSTGRES_POOL_TIMEOUT=30     # Tiempo máximo en segundos que una solicitud esperará por una conexión disponible
POSTGRES_POOL_RECYCLE=1800   # Tiempo en segundos tras el cual una conexión inactiva será reciclada (30 minutos)

# N8N Configuration
N8N_PROTOCOL=https
N8N_HOST=tu-dominio.ngrok-free.app
N8N_PORT=5678
N8N_BASIC_AUTH_ACTIVE=true
N8N_BASIC_AUTH_USER=usuario
N8N_BASIC_AUTH_PASSWORD=password_seguro
N8N_USER_MANAGEMENT_DISABLED=true
N8N_API_KEY=                  # API Key para acceder a n8n REST API (opcional)

# Webhook Configuration
WEBHOOK_URL=https://tu-dominio.ngrok-free.app
 
# Redis - Sistema de caché
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
REDIS_CACHE_TTL=86400           # Tiempo de vida general para entradas en caché (24h)
SUMMARY_CACHE_TTL=86400         # Para resúmenes
TRANSLATION_CACHE_TTL=86400     # Para traducciones
CLASSIFICATION_CACHE_TTL=86400  # Para clasificaciones



# Integración con Telegram (opcional)
TELEGRAM_BOT_TOKEN=            # Token del bot de Telegram

### Comandos útiles:
### ngrok http 5678            # Exponer n8n a internet
### sudo systemctl stop postgresql  # Detener PostgreSQL local (si está en uso)
### sudo systemctl stop redis-server  # Detener Redis local (si está en uso)
### sudo lsof -i :5678         # Verificar qué proceso usa el puerto 5678 